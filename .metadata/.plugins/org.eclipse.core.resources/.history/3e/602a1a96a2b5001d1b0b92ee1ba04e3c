package org.zerock.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.zerock.domain.BoardVO;
import org.zerock.domain.Criteria;
import org.zerock.mapper.BoardMapper;
import org.zerock.mapper.ReplyMapper;

import lombok.AllArgsConstructor;
import lombok.Setter;

@Service
@AllArgsConstructor
public class BoardServiceImpl implements BoardService {
	@Setter(onMethod_ = @Autowired)
	private BoardMapper mapper;
	@Setter(onMethod_ = @Autowired)
	private ReplyMapper replymapper;
	@Override
	public void register(BoardVO board) {
		System.out.println("register ... : " + board);
		mapper.insertSelectKey(board);
	}

	@Override
	public BoardVO get(Long bno) {
		System.out.println("get... : " + bno);
		return mapper.read(bno);
	}

	@Override
	public boolean modify(BoardVO board) {
		System.out.println("modify...." + board);
		return mapper.update(board) == 1; // 수정이 정상적으로 이뤄지면 1 반환
	}
	
	@Override
	public boolean remove(Long bno) {
		System.out.println("delete...." + bno);
		return mapper.delete(bno) == 1; // 삭제가 정상적으로 이뤄지면 1 반환
	}

	@Override
	public List<BoardVO> getList(Criteria cri) {
		System.out.println("get List With Criteria : " + cri);

		return mapper.getListWithPaging(cri);
	}

	@Override
	public int getTotal(Criteria cri) {
		System.out.println("get total count");

		return mapper.getTotalCount(cri);
	}
}
